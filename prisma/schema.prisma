// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int        @id @default(autoincrement())
  created_at   DateTime   @default(now())
  updated_at   DateTime   @updatedAt
  name         String
  lastName     String
  email        String     @unique
  passwordHash String
  refreshToken String?
  birthDay     DateTime
  role         Role       @default(USER)
  borrows     UserBook[]
}

model Author {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  lastName   String
  Book       Book[]
}

model Book {
  id          Int        @id @default(autoincrement())
  created_at  DateTime   @default(now())
  updated_at  DateTime   @updatedAt
  image       String
  isbn        String
  title       String
  description String
  author      Author     @relation(fields: [authorId], references: [id])
  category    Category   @relation(fields: [categoryId], references: [id])
  authorId    Int
  categoryId  Int
  borrows    UserBook[]
}

model UserBook {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  book       Book     @relation(fields: [bookId], references: [id])
  userId     Int
  bookId     Int
}

model Category {
  id         Int      @id @default(autoincrement())
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  name       String
  books       Book[]
}

enum Role {
  USER
  ADMIN
}
